C++ Code:
Method 1:Brute force
#include<iostream>
#include<string>
using namespace std;
class Solution
{
    public:
    pair<int,int>countOfVowelsConsonants(string s)
    {
        int vowels=0,consonants=0;
        for(char ch:s)
        {
            ch=(ch>='A' && ch<='Z') ? ch+32:ch;
            if(ch>='a' && ch<='z')
            {
                if(ch=='a' || ch=='e' || ch=='i' || ch=='o' || ch=='u')
                {
                    vowels+=1;
                }
                else 
                {
                    consonants+=1;
                }
            }
        }
        return {vowels,consonants};
    }
};
int main()
{
    string s;
    getline(cin,s);
    Solution sol;
    pair<int,int>result=sol.countOfVowelsConsonants(s);
    cout<<result.first<<endl;
    cout<<result.second<<endl;
}

Method 2:Better
#include<iostream>
#include<string>
#include<cctype>
#include<utility>
#include<unordered_set>
using namespace std;
class Solution
{
    public:
    pair<int,int>countOfVowelsConsonants(string s)
    {
        int vowels=0,consonants=0;
        unordered_set<char>vowel_set={'A','E','I','O','U','a','e','i','o','u'};
        for(char ch:s)
        {
            if(isalpha(ch))
            {
                if(vowel_set.count(ch))
                {
                    vowels+=1;
                }
                else 
                {
                    consonants+=1;
                }
            }
        }
        return {vowels,consonants};
    }
};
int main()
{
    string s;
    getline(cin,s);
    Solution sol;
    pair<int,int>result=sol.countOfVowelsConsonants(s);
    cout<<result.first<<endl;
    cout<<result.second<<endl;
    
}

Method 3:Optimized
#include<iostream>
#include<string>
#include<cctype>
#include<unordered_set>
#include<utility>
using namespace std;
class Solution
{
    public:
    pair<int,int>countOfVowelConsonant(string s)
    {
       unordered_set<char>vowels_set={'a','e','i','o','u'};
       int vowels=0,consonants=0;
       for(char ch:s)
       {
           if(isalpha(ch))
           {
               if(vowels_set.count(tolower(ch)))
               {
                   vowels+=1;
               }
               else 
               {
                   consonants+=1;
               }
           }
       }
       return {vowels,consonants};
    }
};
int main()
{
    string s;
    getline(cin,s);
    Solution sol;
    pair<int,int>result=sol.countOfVowelConsonant(s);
    cout<<result.first<<endl;
    cout<<result.second<<endl;
    
}

Input:
hello world

Output:
3
7

